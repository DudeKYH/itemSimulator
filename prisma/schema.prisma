generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId     Int          @id @default(autoincrement()) @map("userId")
  name       String       @unique @map("name")
  password   String       @map("password")
  createdAt  DateTime     @default(now()) @map("createdAt")
  updatedAt  DateTime     @updatedAt @map("updatedAt")

  characters Characters[]

  @@map("Users")
}

model Characters {
  characterId Int          @id @default(autoincrement()) @map("characterId")
  userId      Int          @map("userId")
  name        String       @unique @map("name")
  health      Int          @default(500) @map("health")
  power       Int          @default(100) @map("power")
  money       Int          @default(10000) @map("money")
  createdAt   DateTime     @default(now()) @map("createdAt")
  updatedAt   DateTime     @updatedAt @map("updatedAt")

  users        Users        @relation(fields: [userId], references: [userId], onDelete: Cascade)

  inventories Inventories[]
  equipments  Equipments[]

  @@map("Characters")
}

model Items {
  itemId    Int           @id @default(autoincrement()) @map("itemId")
  name      String        @unique @map("name")
  health    Int           @map("health")
  power     Int           @map("power")
  price     Int           @map("price")
  createdAt DateTime      @default(now()) @map("createdAt")
  updatedAt DateTime      @updatedAt @map("updatedAt")

  inventories Inventories[]
  equipments  Equipments[]

  @@map("Items")
}

model Inventories {
  inventoryId Int        @id @default(autoincrement()) @map("inventoryId")
  characterId Int        @map("characterId")
  amount      Int        @map("amount")
  itemId      Int        @map("itemId")
  createdAt   DateTime   @default(now()) @map("createdAt")
  updatedAt   DateTime   @updatedAt @map("updatedAt")


  characters   Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  items        Items      @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

  @@map("Inventories")
}

model Equipments {
  equipmentId Int        @id @default(autoincrement()) @map("equipmentId")
  characterId Int        @map("characterId")
  itemId      Int        @map("itemId")
  createdAt   DateTime   @default(now()) @map("createdAt")
  updatedAt   DateTime   @updatedAt @map("updatedAt")

  characters   Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
  items        Items      @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

  @@map("Equipments")
}



